"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.xFromLeft = xFromLeft;
exports.yFromTop = yFromTop;
exports.leftFromX = leftFromX;
exports.topFromY = topFromY;
var _sufficient = require("sufficient");
var _styles = require("../styles");
var _constants = require("../constants");
function xFromLeft(left, param) {
    var inverted = param === void 0 ? true : param;
    var squareDivWidth = _sufficient.controller.getSquareDivWidth(), x = inverted ? Math.floor(-left / squareDivWidth + _constants.HALF) : Math.floor(left / squareDivWidth + _constants.HALF);
    return x;
}
function yFromTop(top, param) {
    var inverted = param === void 0 ? true : param;
    var squareDivHeight = _sufficient.controller.getSquareDivHeight(), y = inverted ? Math.floor(top / squareDivHeight + _constants.HALF) : Math.floor(-top / squareDivHeight + _constants.HALF);
    return y;
}
function leftFromX(x, param) {
    var inverted = param === void 0 ? true : param;
    var left = inverted ? "".concat((_constants.BOARD_SIZE - 1 - x) * _styles.squareDivSize, "rem") : "".concat(x * _styles.squareDivSize, "rem");
    return left;
}
function topFromY(y, param) {
    var inverted = param === void 0 ? true : param;
    var top = inverted ? "".concat(y * _styles.squareDivSize, "rem") : "".concat((_constants.BOARD_SIZE - 1 - y) * _styles.squareDivSize, "rem");
    return top;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpdGVzL2Nvb3JkaW5hdGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBjb250cm9sbGVyIH0gZnJvbSBcInN1ZmZpY2llbnRcIjtcblxuaW1wb3J0IHsgc3F1YXJlRGl2U2l6ZSB9IGZyb20gXCIuLi9zdHlsZXNcIjtcbmltcG9ydCB7IEJPQVJEX1NJWkUsIEhBTEYgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiB4RnJvbUxlZnQobGVmdCwgaW52ZXJ0ZWQgPSB0cnVlKSB7XG4gIGNvbnN0IHNxdWFyZURpdldpZHRoID0gY29udHJvbGxlci5nZXRTcXVhcmVEaXZXaWR0aCgpLFxuICAgICAgICB4ID0gaW52ZXJ0ZWQgP1xuICAgICAgICAgICAgICBNYXRoLmZsb29yKCgtbGVmdCAvIHNxdWFyZURpdldpZHRoKSArIEhBTEYpIDpcbiAgICAgICAgICAgICAgICBNYXRoLmZsb29yKChsZWZ0IC8gc3F1YXJlRGl2V2lkdGgpICsgSEFMRik7XG5cbiAgcmV0dXJuIHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB5RnJvbVRvcCh0b3AsIGludmVydGVkID0gdHJ1ZSkge1xuICBjb25zdCBzcXVhcmVEaXZIZWlnaHQgPSBjb250cm9sbGVyLmdldFNxdWFyZURpdkhlaWdodCgpLFxuICAgICAgICB5ID0gaW52ZXJ0ZWQgP1xuICAgICAgICAgICAgICBNYXRoLmZsb29yKCh0b3AgLyBzcXVhcmVEaXZIZWlnaHQpICsgSEFMRikgOlxuICAgICAgICAgICAgICAgIE1hdGguZmxvb3IoKC10b3AgLyBzcXVhcmVEaXZIZWlnaHQpICsgSEFMRik7XG5cbiAgcmV0dXJuIHk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsZWZ0RnJvbVgoeCwgaW52ZXJ0ZWQgPSB0cnVlKSB7XG4gIGNvbnN0IGxlZnQgPSBpbnZlcnRlZCA/XG4gICAgICAgICAgICAgICAgIGAkeygoQk9BUkRfU0laRSAtIDEpIC0geCkgKiBzcXVhcmVEaXZTaXplfXJlbWAgOlxuICAgICAgICAgICAgICAgICAgIGAke3ggKiBzcXVhcmVEaXZTaXplfXJlbWA7XG5cbiAgcmV0dXJuIGxlZnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b3BGcm9tWSh5LCBpbnZlcnRlZCA9IHRydWUpIHtcbiAgY29uc3QgdG9wID0gaW52ZXJ0ZWQgP1xuICAgICAgICAgICAgICAgIGAke3kgKiBzcXVhcmVEaXZTaXplfXJlbWAgOlxuICAgICAgICAgICAgICAgICAgYCR7KChCT0FSRF9TSVpFIC0gMSkgLSB5KSAqIHNxdWFyZURpdlNpemV9cmVtYDtcblxuICByZXR1cm4gdG9wO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJDQUFBLFVBQVk7Ozs7UUFPSSxTQUFTLEdBQVQsU0FBUztRQVNULFFBQVEsR0FBUixRQUFRO1FBU1IsU0FBUyxHQUFULFNBQVM7UUFRVCxRQUFRLEdBQVIsUUFBUTtJQS9CRyxXQUFZO0lBRVQsT0FBVztJQUNSLFVBQWM7U0FFL0IsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFlO1FBQWYsUUFBUSxHQUFSLEtBQWUsY0FBSixJQUFJLEdBQWYsS0FBZTtRQUN2QyxjQUFjLEdBTkssV0FBWSxZQU1ILGlCQUFpQixJQUM3QyxDQUFDLEdBQUcsUUFBUSxHQUNOLElBQUksQ0FBQyxLQUFLLEVBQUcsSUFBSSxHQUFHLGNBQWMsR0FMZixVQUFjLFNBTS9CLElBQUksQ0FBQyxLQUFLLENBQUUsSUFBSSxHQUFHLGNBQWMsR0FOaEIsVUFBYztXQVF0QyxDQUFDOztTQUdNLFFBQVEsQ0FBQyxHQUFHLEVBQUUsS0FBZTtRQUFmLFFBQVEsR0FBUixLQUFlLGNBQUosSUFBSSxHQUFmLEtBQWU7UUFDckMsZUFBZSxHQWZJLFdBQVksWUFlRixrQkFBa0IsSUFDL0MsQ0FBQyxHQUFHLFFBQVEsR0FDTixJQUFJLENBQUMsS0FBSyxDQUFFLEdBQUcsR0FBRyxlQUFlLEdBZGQsVUFBYyxTQWUvQixJQUFJLENBQUMsS0FBSyxFQUFHLEdBQUcsR0FBRyxlQUFlLEdBZmpCLFVBQWM7V0FpQnRDLENBQUM7O1NBR00sU0FBUyxDQUFDLENBQUMsRUFBRSxLQUFlO1FBQWYsUUFBUSxHQUFSLEtBQWUsY0FBSixJQUFJLEdBQWYsS0FBZTtRQUNwQyxJQUFJLEdBQUcsUUFBUSxNQUNvQyxNQUFHLEVBdEI3QixVQUFjLGNBc0JaLENBQUMsR0FBSSxDQUFDLElBdkJYLE9BQVcsaUJBdUJrQixHQUFHLFFBQ3RCLE1BQUcsQ0FBckIsQ0FBQyxHQXhCTyxPQUFXLGlCQXdCRCxHQUFHO1dBRWxDLElBQUk7O1NBR0csUUFBUSxDQUFDLENBQUMsRUFBRSxLQUFlO1FBQWYsUUFBUSxHQUFSLEtBQWUsY0FBSixJQUFJLEdBQWYsS0FBZTtRQUNuQyxHQUFHLEdBQUcsUUFBUSxNQUNlLE1BQUcsQ0FBckIsQ0FBQyxHQS9CVSxPQUFXLGlCQStCSixHQUFHLFFBQ29CLE1BQUcsRUEvQjlCLFVBQWMsY0ErQlgsQ0FBQyxHQUFJLENBQUMsSUFoQ1osT0FBVyxpQkFnQ21CLEdBQUc7V0FFdEQsR0FBRyJ9